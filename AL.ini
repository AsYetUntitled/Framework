[Default]

Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.

Input SQF Parser = false
;; Expermential
;;   If enabled will use SQF Array Parser instead of : seperator for values
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]
;;   Advantage is that you don't need to strip : seperator from user inputted values

[resetLifeVehicles]
SQL1_1 = CALL resetLifeVehicles

[deleteOldHouses]
SQL1_1 = CALL deleteOldHouses

[deleteDeadVehicles]
SQL1_1 = CALL deleteDeadVehicles

[deleteOldGangs]
SQL1_1 = CALL deleteOldGangs


[checkPlayerExists]
SQL1_1 = SELECT pid, name FROM players WHERE pid = ?
SQL1_INPUTS = 1

[insertNewPlayer]
SQL1_1 = INSERT INTO players (pid, name, cash, bankacc, aliases, cop_licenses, med_licenses, civ_licenses, civ_gear, cop_gear, med_gear) VALUES (?, ?, ?, ?, ?,'"[]"','"[]"','"[]"','"[]"','"[]"','"[]"')
SQL1_INPUTS = 1, 2, 3, 4, 5

[selectWest]
SQL1_1 = SELECT pid, name, cash, bankacc, adminlevel, donorlevel, cop_licenses, coplevel, cop_gear, blacklist, cop_stats, playtime FROM players WHERE pid = ?
SQL1_INPUTS = 1

[selectCiv]
SQL1_1 = SELECT pid, name, cash, bankacc, adminlevel, donorlevel, civ_licenses, arrested, civ_gear, civ_stats, civ_alive, civ_position, playtime FROM players WHERE pid = ?
SQL1_INPUTS = 1

[selectIndep]
SQL1_1 = SELECT pid, name, cash, bankacc, adminlevel, donorlevel, med_licenses, mediclevel, med_gear, med_stats, playtime FROM players WHERE pid = ?
SQL1_INPUTS = 1

[updateWest]
SQL1_1 = UPDATE players SET name = ?, cash = ?, bankacc = ?, cop_gear = ?, cop_licenses = ?, cop_stats = ?, playtime = ? WHERE pid = ?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8

[updateCiv]
SQL1_1 = UPDATE players SET name = ?, cash = ?, bankacc = ?, civ_licenses = ?, civ_gear = ?, arrested = ?, civ_stats = ?, civ_alive = ?, civ_position = ?, playtime = ? WHERE pid = ?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11

[updateIndep]
SQL1_1 = UPDATE players SET name = ?, cash = ?, bankacc = ?, med_licenses = ?, med_gear = ?, med_stats = ?, playtime = ? WHERE pid = ?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8

[updateCash]
SQL1_1 = UPDATE players SET cash = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateBank]
SQL1_1 = UPDATE players SET bankacc = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateWestLicenses]
SQL1_1 = UPDATE players SET cop_licenses = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateCivLicenses]
SQL1_1 = "UPDATE players SET civ_licenses = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateIndepLicenses]
SQL1_1 = "UPDATE players SET med_licenses = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateWestGear]
SQL1_1 = UPDATE players SET cop_gear = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateCivGear]
SQL1_1 = "UPDATE players SET civ_gear = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateIndepGear]
SQL1_1 = "UPDATE players SET med_gear = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateCivPosition]
SQL1_1 = UPDATE players SET civ_alive = ?, civ_position = ? WHERE pid = ?
SQL1_INPUTS = 1, 2, 3

[updateArrested]
SQL1_1 = UPDATE players SET arrested = ? WHERE pid = ?
SQL1_INPUTS = 1, 2

[updateCashAndBank]
SQL1_1 = UPDATE players SET cash = ?, bankacc = ? WHERE pid = ?
SQL1_INPUTS = 1, 2, 3



[getPlayerGang]
SQL1_1 = SELECT id, owner, name, maxmembers, bank, members FROM gangs WHERE active = '1' AND members LIKE %?%
SQL1_INPUTS = 1

[getAllHouses]
SQL1_1 = SELECT COUNT(*) FROM houses WHERE owned = '1'

[getPlayerHouses]
SQL1_1 = SELECT houses.id, houses.pid, houses.pos, players.name, houses.garage FROM houses INNER JOIN players WHERE houses.owned = '1' AND houses.pid = players.pid LIMIT ?, 10
SQL1_INPUTS = 1

[getHousePositions]
SQL1_1 = SELECT pid, pos FROM houses WHERE pid = ? AND owned='1'
SQL1_INPUTS = 1

[getContainerPositions]
SQL1_1 = SELECT pid, pos FROM containers WHERE pid = ? AND owned = '1'
SQL1_INPUTS = 1

[selectContainers]
SQL1_1 = SELECT pid, pos, classname, inventory, gear, dir, id FROM containers WHERE pid = ? AND owned = '1'
SQL1_INPUTS = 1
